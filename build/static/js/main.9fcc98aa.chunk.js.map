{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","main","maxWidth","height","backgroundColor","palette","grey","paddingTop","spacing","img","width","breakpoints","up","padding","imgContainer","position","borderRadius","textAlign","textHeader","marginBottom","seperator","borderTop","borderBottom","search","display","searchInput","flexGrow","marginRight","CardContent","flexDirection","alignItems","justifyContent","marginTop","root","overflow","label","textTransform","content","errorMessage","App","classes","useState","setSearch","pokemon","setPokemon","errors","setErrors","capitalizeFirstLetter","str","substr","toUpperCase","CssBaseline","className","Container","Typography","variant","align","color","paragraph","onSubmit","e","preventDefault","match","Object","values","every","x","validate","superagent","post","send","isNaN","toLowerCase","set","then","res","body","autoComplete","Toolbar","TextField","placeholder","name","value","InputProps","startAdornment","InputAdornment","Search","onChange","target","error","helperText","Button","type","size","Grid","container","justify","item","xs","sm","md","lg","undefined","src","sprite","alt","Card","component","hp","xp","style","minWidth","types","map","t","idx","length","weight","borderRight","abilities","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fcc98aa.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport superagent from \"superagent\";\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  Button,\n  Typography,\n  TextField,\n  Card,\n  CardContent,\n  makeStyles,\n  InputAdornment,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    maxWidth: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.grey[200],\n    paddingTop: theme.spacing(5),\n  },\n  img: {\n    width: \"80%\",\n    [theme.breakpoints.up(\"xs\")]: {\n      padding: \"40px\",\n    },\n  },\n  imgContainer: {\n    position: \"relative\",\n    borderRadius: \"50%\",\n    textAlign: \"center\",\n  },\n  textHeader: {\n    marginBottom: theme.spacing(4),\n  },\n  seperator: {\n    borderTop: 0,\n    borderBottom: \"10px solid #6EECB7\",\n    borderRadius: \"5px\",\n    width: \"60%\",\n  },\n  search: {\n    display: \"flex\",\n  },\n  searchInput: {\n    flexGrow: 1,\n    width: \"75%\",\n    marginRight: theme.spacing(1),\n  },\n  CardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"100px\",\n    marginTop: \"-140px\",\n  },\n  root: {\n    overflow: \"visible\",\n  },\n  label: {\n    textTransform: \"none\",\n  },\n  content: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(0.5),\n    },\n  },\n  errorMessage: {\n    paddingTop: theme.spacing(4),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"Charizard\");\n  const [pokemon, setPokemon] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const capitalizeFirstLetter = (str) => {\n    return str.substr(0, 1).toUpperCase() + str.substr(1);\n  };\n\n  const validate = () => {\n    let errors = {};\n    const letterNumber = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\n    errors.search = search ? \"\" : \"*Please Input an ID or Name\";\n    errors.search =\n      !search.match(letterNumber) && errors.search !== null\n        ? errors.search\n        : \"*Input cannot contain both Alphabets & Numbers\";\n    setErrors({ ...errors });\n    return Object.values(errors).every((x) => x === \"\");\n  };\n\n  const request = () => {\n    superagent\n      .post(\"/pokemonProd\")\n      .send({ search: isNaN(search) ? search.toLowerCase() : search })\n      .set(\"Accept\", \"application/json\")\n      .then((res) => setPokemon(res.body));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      request();\n    }\n  };\n\n \n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <main className={classes.main}>\n        <div>\n          <Container maxWidth=\"sm\" className={classes.textHeader}>\n            <Typography\n              variant=\"h6\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              FIND YOUR POKEMON!\n            </Typography>\n          </Container>\n        </div>\n        <Container>\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\n            <Toolbar className={classes.search}>\n              <TextField\n                variant=\"outlined\"\n                className={classes.searchInput}\n                label=\"Search Pokemon\"\n                placeholder=\"Input Pokemon Id or Name\"\n                name=\"pokemon\"\n                value={search}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Search />\n                    </InputAdornment>\n                  ),\n                }}\n                onChange={(e) => setSearch(e.target.value)}\n                {...(errors.search && {\n                  error: true,\n                  helperText: errors.search,\n                })}\n              />\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                size=\"large\"\n                color=\"primary\"\n                classes={{ label: classes.label }}\n              >\n                Submit\n              </Button>\n            </Toolbar>\n          </form>\n          <Grid container justify=\"center\" className={classes.content}>\n            <Grid item xs={10} sm={6} md={4} lg={4}>\n              {pokemon && pokemon.error === undefined ? (\n                <>\n                  <div className={classes.imgContainer}>\n                    <img\n                      src={pokemon.sprite}\n                      alt={pokemon.name}\n                      className={classes.img}\n                    />\n                  </div>\n                  <Card classes={{ root: classes.root }}>\n                    <CardContent\n                      className={classes.CardContent}\n                      component=\"div\"\n                    >\n                      <Typography variant=\"h5\">{`${capitalizeFirstLetter(\n                        pokemon.name\n                      )}`}</Typography>\n                      <hr className={classes.seperator} />\n                      <div className=\"stats\">\n                        <span className=\"first cp-text\">{`Max Hp ${pokemon.hp}`}</span>\n                        <span className=\"cp-text\">{`Xp ${pokemon.xp}`}</span>\n                      </div>\n\n                      <div className=\"attributes-container\">\n                        <div\n                          className=\"col attributes-content\"\n                          style={{ minWidth: \"42%\" }}\n                        >\n                          <p className=\"cp-text\">\n                            {pokemon.types.map((t, idx, { length }) =>\n                              idx + 1 !== length && length > 1\n                                ? `${t}/`\n                                : `${t}`\n                            )}\n                          </p>\n                          <small className=\"text-muted\">Type</small>\n                        </div>\n                        <div className=\"col attributes-content\">\n                          <p className=\"cp-text\">{`${pokemon.weight}kg`}</p>\n                          <small className=\"text-muted\">Weight</small>\n                        </div>\n                        <div className=\"col attributes-content\">\n                          <p\n                            className=\"cp-text no-border\"\n                            style={{ borderRight: 0 }}\n                          >\n                            {`${pokemon.height / 10}m`}\n                          </p>\n                          <small className=\"text-muted\">Height</small>\n                        </div>\n                      </div>\n\n                      <div className=\"player-data\">\n                        <div className=\"col data-container\">\n                          <p className=\"stardust\">\n                            {pokemon.abilities.map((a, idx, { length }) =>\n                              idx + 1 !== length && length > 1\n                                ? `${capitalizeFirstLetter(a)}, `\n                                : `${capitalizeFirstLetter(a)}`\n                            )}\n                          </p>\n                          <p className=\"muted-text\">Abilities</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </>\n              ) : (\n                <Typography\n                  variant=\"h6\"\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  paragraph\n                  className={classes.errorMessage}\n                >\n                  {pokemon.error}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}